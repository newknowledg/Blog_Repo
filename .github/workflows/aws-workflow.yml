name: AWS Workflow

on:
  workflow_call:
    inputs:
      WORKING_DIRECTORY:
        description: "working directory"
        type: string
        required: true
    outputs:
      endpoint: 
        description: "database endpoint"
        value: "${{ jobs.tf_deployment.outputs.endpoint }}"
    secrets:
      GCP_EMAIL:
        required: true
      GCP_SA_KEY:
        required: true

env:
  WORKING_DIRECTORY: ${{ inputs.WORKING_DIRECTORY }}

jobs:
  tf_deployment:
    runs-on: ubuntu-latest
    outputs:
      endpoint: ${{ steps.vars.outputs.endpoint }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Config credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Set DB Creds
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: |
        sed -ie "s/{__USER__}/${{ secrets.DB_USER }}/g" main.tf
        sed -ie "s/{__PASS__}/${{ secrets.DB_PASS }}/g" main.tf
    - name: Terraform init
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: |
        terraform init
        terraform plan
        terraform apply -auto-approve
      env:
        AWS_CREDENTIALS: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Terraform vars
      id: vars
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: |
        echo -n "endpoint is: "
        echo $(terraform state pull | grep endpoint | awk -F ':' '{print $2}' | tr -d '",[]')
        #echo -n "endpoint='test'$(echo $(echo '_merge'))" >> $GITHUB_OUTPUT
        echo -n "endpoint=$(echo $(terraform state pull | grep endpoint | awk -F ':' '{print $2}'))" >> $GITHUB_OUTPUT
      env:
        AWS_CREDENTIALS: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
