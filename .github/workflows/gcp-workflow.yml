name: GCP Workflow

on:
  workflow_call:
    inputs:
      WORKING_DIRECTORY:
        description: "working directory"
        type: string
        required: true
      Endpoint:
        description: "change database endpoint"
        type: string
        required: true
      TUNNEL1_ADDRESS: 
        description: "vpn gateway address"
        type: string
        required: true
      TUNNEL2_ADDRESS: 
        description: "vpn gateway address"
        type: string
        required: true
      TUNNEL1_LOCAL_ADDRESS: 
        description: "gateway CIDR"
        type: string
        required: true
      TUNNEL2_LOCAL_ADDRESS: 
        description: "gateway CIDR"
        type: string
        required: true
      TUNNEL1_CIDR: 
        description: "gateway CIDR"
        type: string
        required: true
      TUNNEL2_CIDR: 
        description: "gateway CIDR"
        type: string
        required: true
    secrets:
      GCP_EMAIL:
        required: true
      GCP_SA_KEY:
        required: true

env:
  WORKING_DIRECTORY: ${{ inputs.WORKING_DIRECTORY }}
  ENDPOINT: ${{ inputs.ENDPOINT }}
  TUNNEL1_ADDRESS: ${{ inputs.TUNNEL1_ADDRESS }}
  TUNNEL2_ADDRESS: ${{ inputs.TUNNEL2_ADDRESS }}
  TUNNEL1_LOCAL_ADDRESS: ${{ inputs.TUNNEL1_LOCAL_ADDRESS }}
  TUNNEL2_LOCAL_ADDRESS: ${{ inputs.TUNNEL2_LOCAL_ADDRESS }}
  TUNNEL1_CIDR: ${{ inputs.TUNNEL1_CIDR }}
  TUNNEL2_CIDR: ${{ inputs.TUNNEL2_CIDR }}

jobs:
  tf_deployment:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2
    - name: Set DB Creds
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: |
        sed -ie "s/{__NAME__}/${{ secrets.DB_NAME }}/g" roles/wordpress/defaults/main.yml
        sed -ie "s/{__USER__}/${{ secrets.DB_USER }}/g" roles/wordpress/defaults/main.yml
        sed -ie "s/{__PASSWORD__}/${{ secrets.DB_PASS }}/g" roles/wordpress/defaults/main.yml
        sed -ie "s/{__HOST__}/${{ secrets.DB_USER }}${{ env.ENDPOINT }}/g" roles/wordpress/defaults/main.yml
        echo "${{ secrets.ANSIBLE_KEY }}" > ansible.ssh
        chmod 600 ansible.ssh
        sed -ie "s/{__GCP_IP__}/${{ secrets.GCP_IP }}/g" main.tf
        sed -ie "s/{__PROJECT_ID__}/${{ secrets.PROJECT_ID }}/g" main.tf
        sed -ie "s/{__GCP_ASN__}/${{ secrets.GCP_ASN }}/g" main.tf
        sed -ie "s/{__AWS_ASN__}/${{ secrets.AWS_ASN }}/g" main.tf
        sed -ie "s/{__SHARED_SECRET__}/${{ secrets.SHARED_SECRET }}/g" main.tf
        sed -ie "s/{__AWS_IP1__}/${{ env.TUNNEL1_ADDRESS }}/g" main.tf
        sed -ie "s/{__AWS_IP2__}/${{ env.TUNNEL2_ADDRESS }}/g" main.tf
        sed -ie "s/{__SN1__}/${{ env.TUNNEL1_LOCAL_ADDRESS }}/g" main.tf
        sed -ie "s/{__SN2__}/${{ env.TUNNEL2_LOCAL_ADDRESS }}/g" main.tf
        sed -ie "s/{__CIDR1__}/${{ env.TUNNEL1_CIDR }}/g" main.tf
        sed -ie "s/{__CIDR2__}/${{ env.TUNNEL2_CIDR }}/g" main.tf
    - name: GCP Authentication
      uses: 'google-GitHub-actions/auth@v1'
      with:
        create_credentials_file: true
        workload_identity_provider: "projects/791135505681/locations/global/workloadIdentityPools/github-actions/providers/github-actions"
        service_account: "github@feisty-proton-401321.iam.gserviceaccount.com"
    - name: Terraform init
      working-directory: ${{ env.WORKING_DIRECTORY }}
      run: |
        terraform init
        terraform plan
        #terraform destroy -auto-approve
        terraform apply -auto-approve
      #env:
      #  GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
